{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","hreservation/tests/app.lint-test.js","hreservation/tests/helpers/destroy-app.js","hreservation/tests/helpers/ember-simple-auth.js","hreservation/tests/helpers/module-for-acceptance.js","hreservation/tests/helpers/resolver.js","hreservation/tests/helpers/start-app.js","hreservation/tests/integration/components/hr-agenda-test.js","hreservation/tests/integration/components/hr-announcements-test.js","hreservation/tests/integration/components/hr-dashboard-test.js","hreservation/tests/integration/components/hr-header-test.js","hreservation/tests/integration/components/hr-login-test.js","hreservation/tests/integration/components/hr-service-panel-test.js","hreservation/tests/integration/components/hr-sidebar-test.js","hreservation/tests/test-helper.js","hreservation/tests/tests.lint-test.js","hreservation/tests/unit/adapters/application-test.js","hreservation/tests/unit/controllers/hr-dashboard-test.js","hreservation/tests/unit/models/hr-agenda-test.js","hreservation/tests/unit/routes/application-test.js","hreservation/tests/unit/routes/hr-dashboard-test.js","hreservation/tests/unit/routes/hr-service-panel-test.js","hreservation/tests/unit/routes/login-test.js","hreservation/tests/unit/routes/overview-test.js","hreservation/tests/unit/services/sidebar-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('hreservation/tests/app.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | app');\n\n  QUnit.test('adapters/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('authenticators/autherizers.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'authenticators/autherizers.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('authenticators/oauth2.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'authenticators/oauth2.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/hr-agenda.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/hr-agenda.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/hr-announcements.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/hr-announcements.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/hr-dashboard.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/hr-dashboard.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/hr-header.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/hr-header.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/hr-service-panel.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/hr-service-panel.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/hr-sidebar.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/hr-sidebar.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/hr-dashboard.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/hr-dashboard.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('formats.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'formats.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/announcements.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/announcements.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/hr-dashboard.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/hr-dashboard.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/user.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/user.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/hr-dashboard.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/hr-dashboard.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/hr-service-panel.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/hr-service-panel.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/login.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/login.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/overview.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/overview.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('services/device.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/device.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('services/sidebar.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/sidebar.js should pass ESLint\\n\\n');\n  });\n});","define('hreservation/tests/helpers/destroy-app', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = destroyApp;\n  function destroyApp(application) {\n    Ember.run(application, 'destroy');\n    if (window.server) {\n      window.server.shutdown();\n    }\n  }\n});","define('hreservation/tests/helpers/ember-simple-auth', ['exports', 'ember-simple-auth/authenticators/test'], function (exports, _test) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.authenticateSession = authenticateSession;\n  exports.currentSession = currentSession;\n  exports.invalidateSession = invalidateSession;\n\n\n  var TEST_CONTAINER_KEY = 'authenticator:test';\n\n  function ensureAuthenticator(app, container) {\n    var authenticator = container.lookup(TEST_CONTAINER_KEY);\n    if (!authenticator) {\n      app.register(TEST_CONTAINER_KEY, _test.default);\n    }\n  }\n\n  function authenticateSession(app, sessionData) {\n    var container = app.__container__;\n\n    var session = container.lookup('service:session');\n    ensureAuthenticator(app, container);\n    session.authenticate(TEST_CONTAINER_KEY, sessionData);\n    return app.testHelpers.wait();\n  }\n\n  function currentSession(app) {\n    return app.__container__.lookup('service:session');\n  }\n\n  function invalidateSession(app) {\n    var session = app.__container__.lookup('service:session');\n    if (session.get('isAuthenticated')) {\n      session.invalidate();\n    }\n    return app.testHelpers.wait();\n  }\n});","define('hreservation/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'hreservation/tests/helpers/start-app', 'hreservation/tests/helpers/destroy-app'], function (exports, _qunit, _startApp, _destroyApp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function (name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _startApp.default)();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _destroyApp.default)(_this.application);\n        });\n      }\n    });\n  };\n\n  var Promise = Ember.RSVP.Promise;\n});","define('hreservation/tests/helpers/resolver', ['exports', 'hreservation/resolver', 'hreservation/config/environment'], function (exports, _resolver, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var resolver = _resolver.default.create();\n\n  resolver.namespace = {\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix\n  };\n\n  exports.default = resolver;\n});","define('hreservation/tests/helpers/start-app', ['exports', 'hreservation/app', 'hreservation/config/environment'], function (exports, _app, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = startApp;\n  function startApp(attrs) {\n    var attributes = Ember.merge({}, _environment.default.APP);\n    attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n    return Ember.run(function () {\n      var application = _app.default.create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n      return application;\n    });\n  }\n});","define('hreservation/tests/integration/components/hr-agenda-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('hr-agenda', 'Integration | Component | hr agenda', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"PXCWuRY+\",\n      \"block\": \"{\\\"statements\\\":[[\\\"append\\\",[\\\"unknown\\\",[\\\"hr-agenda\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"Ah+0oR89\",\n      \"block\": \"{\\\"statements\\\":[[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"hr-agenda\\\"],null,null,0],[\\\"text\\\",\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]}],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('hreservation/tests/integration/components/hr-announcements-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('hr-announcements', 'Integration | Component | hr announcements', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"p2XXceDf\",\n      \"block\": \"{\\\"statements\\\":[[\\\"append\\\",[\\\"unknown\\\",[\\\"hr-announcements\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"XM5xl0Zg\",\n      \"block\": \"{\\\"statements\\\":[[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"hr-announcements\\\"],null,null,0],[\\\"text\\\",\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]}],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('hreservation/tests/integration/components/hr-dashboard-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('hr-dashboard', 'Integration | Component | hr dashboard', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"SCoeMMsj\",\n      \"block\": \"{\\\"statements\\\":[[\\\"append\\\",[\\\"unknown\\\",[\\\"hr-dashboard\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"VB7pB9Kx\",\n      \"block\": \"{\\\"statements\\\":[[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"hr-dashboard\\\"],null,null,0],[\\\"text\\\",\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]}],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('hreservation/tests/integration/components/hr-header-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('hr-header', 'Integration | Component | hr header', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"G6HittdP\",\n      \"block\": \"{\\\"statements\\\":[[\\\"append\\\",[\\\"unknown\\\",[\\\"hr-header\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"25oetDOt\",\n      \"block\": \"{\\\"statements\\\":[[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"hr-header\\\"],null,null,0],[\\\"text\\\",\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]}],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('hreservation/tests/integration/components/hr-login-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('hr-login', 'Integration | Component | hr login', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"URxweI/p\",\n      \"block\": \"{\\\"statements\\\":[[\\\"append\\\",[\\\"unknown\\\",[\\\"hr-login\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"mf38bFnw\",\n      \"block\": \"{\\\"statements\\\":[[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"hr-login\\\"],null,null,0],[\\\"text\\\",\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]}],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('hreservation/tests/integration/components/hr-service-panel-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('hr-service-panel', 'Integration | Component | hr service panel', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"xwU1oYOT\",\n      \"block\": \"{\\\"statements\\\":[[\\\"append\\\",[\\\"unknown\\\",[\\\"hr-service-panel\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"+4gVcrg+\",\n      \"block\": \"{\\\"statements\\\":[[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"hr-service-panel\\\"],null,null,0],[\\\"text\\\",\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]}],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('hreservation/tests/integration/components/hr-sidebar-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('hr-sidebar', 'Integration | Component | hr sidebar', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"lSXzXnym\",\n      \"block\": \"{\\\"statements\\\":[[\\\"append\\\",[\\\"unknown\\\",[\\\"hr-sidebar\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"Pe9d+aGw\",\n      \"block\": \"{\\\"statements\\\":[[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"hr-sidebar\\\"],null,null,0],[\\\"text\\\",\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]}],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('hreservation/tests/test-helper', ['hreservation/tests/helpers/resolver', 'ember-qunit'], function (_resolver, _emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.setResolver)(_resolver.default);\n});","define('hreservation/tests/tests.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | tests');\n\n  QUnit.test('helpers/destroy-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/module-for-acceptance.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/start-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/hr-agenda-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/hr-agenda-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/hr-announcements-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/hr-announcements-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/hr-dashboard-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/hr-dashboard-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/hr-header-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/hr-header-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/hr-login-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/hr-login-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/hr-service-panel-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/hr-service-panel-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/hr-sidebar-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/hr-sidebar-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/adapters/application-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/application-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/hr-dashboard-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/hr-dashboard-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/hr-agenda-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/hr-agenda-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/application-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/application-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/hr-dashboard-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/hr-dashboard-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/hr-service-panel-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/hr-service-panel-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/login-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/login-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/overview-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/overview-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/services/sidebar-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/sidebar-test.js should pass ESLint\\n\\n');\n  });\n});","define('hreservation/tests/unit/adapters/application-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('adapter:application', 'Unit | Adapter | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n});","define('hreservation/tests/unit/controllers/hr-dashboard-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:hr-dashboard', 'Unit | Controller | hr dashboard', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('hreservation/tests/unit/models/hr-agenda-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('hr-agenda', 'Unit | Model | hr agenda', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('hreservation/tests/unit/routes/application-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:application', 'Unit | Route | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('hreservation/tests/unit/routes/hr-dashboard-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:hr-dashboard', 'Unit | Route | hr dashboard', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('hreservation/tests/unit/routes/hr-service-panel-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:hr-service-panel', 'Unit | Route | hr service panel', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('hreservation/tests/unit/routes/login-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:login', 'Unit | Route | login', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('hreservation/tests/unit/routes/overview-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:overview', 'Unit | Route | overview', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('hreservation/tests/unit/services/sidebar-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('service:sidebar', 'Unit | Service | sidebar', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('hreservation/config/environment', [], function() {\n  var prefix = 'hreservation';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('hreservation/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappingshIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjjBA;AACA;","file":"tests.js"}